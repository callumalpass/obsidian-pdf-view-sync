/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var g=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var w=Object.getOwnPropertyNames;var F=Object.prototype.hasOwnProperty;var v=(r,n)=>{for(var e in n)g(r,e,{get:n[e],enumerable:!0})},P=(r,n,e,t)=>{if(n&&typeof n=="object"||typeof n=="function")for(let a of w(n))!F.call(r,a)&&a!==e&&g(r,a,{get:()=>n[a],enumerable:!(t=u(n,a))||t.enumerable});return r};var m=r=>P(g({},"__esModule",{value:!0}),r);var D={};v(D,{default:()=>c});module.exports=m(D);var s=require("obsidian"),S={associatedNoteTemplate:"@{{pdf_basename}}.md",frontmatterKey:"pdf-view-state",enableStateSaving:!0,enableStateLoading:!0,createAssociatedNote:!1},c=class extends s.Plugin{constructor(){super(...arguments);this.openPDFs=new Map}async onload(){await this.loadSettings(),this.addSettingTab(new d(this.app,this)),this.registerEvent(this.app.workspace.on("file-open",e=>this.handleFileOpen(e))),this.registerEvent(this.app.workspace.on("layout-change",()=>this.checkForClosedPDFs())),this.registerEvent(this.app.workspace.on("active-leaf-change",e=>{e&&e.view&&!this.isPDFView(e.view)&&this.saveAllPDFStates()})),this.registerInterval(window.setInterval(()=>this.saveAllPDFStates(),3e4)),this.app.workspace.onLayoutReady(()=>this.trackOpenPDFs()),console.log("PDF View Sync plugin loaded")}isPDFView(e){return e&&e.file&&e.file.extension==="pdf"}getActivePDFView(){let e=this.app.workspace.activeLeaf;return e&&this.isPDFView(e.view)?e.view:null}async waitForPDFReady(e){for(let t=0;t<20;t++){let a=e.getState();if(a&&a.page&&a.page>1)return;await new Promise(i=>setTimeout(i,100))}}saveAllPDFStates(){for(let e of this.openPDFs.values())this.savePDFState(e)}trackOpenPDFs(){this.app.workspace.iterateAllLeaves(e=>{if(this.isPDFView(e.view)){let t=e.view;this.openPDFs.set(t.file.path,t)}})}checkForClosedPDFs(){let e=new Set;this.app.workspace.iterateAllLeaves(t=>{this.isPDFView(t.view)&&e.add(t.view.file.path)});for(let[t,a]of this.openPDFs.entries())e.has(t)||(this.savePDFState(a),this.openPDFs.delete(t));this.app.workspace.iterateAllLeaves(t=>{if(this.isPDFView(t.view)){let a=t.view;this.openPDFs.has(a.file.path)||this.openPDFs.set(a.file.path,a)}})}async handleFileOpen(e){var a;if(!this.settings.enableStateLoading||!e||!(e instanceof s.TFile)||e.extension!=="pdf")return;let t=this.getActivePDFView();if(t)try{let i=this.getAssociatedNotePath(e.path);if(!i)return;let o=this.app.vault.getAbstractFileByPath(i);if(!o||!(o instanceof s.TFile))return;let p=(a=this.app.metadataCache.getCache(i))==null?void 0:a.frontmatter;if(!p){let f=(await this.app.vault.read(o)).match(/^---\n([\s\S]*?)\n---/);f&&(p=(0,s.parseYaml)(f[1]))}if(!p||p[this.settings.frontmatterKey]===void 0)return;let l=p[this.settings.frontmatterKey],h=typeof l=="number"?l:l==null?void 0:l.page;if(typeof h!="number")return;await this.waitForPDFReady(t),await t.setState({page:h},{}),new s.Notice(`Restored to page ${h}`)}catch(i){console.error("Failed to restore PDF state:",i)}}async savePDFState(e){if(!this.settings.enableStateSaving)return;let t=e.getState();if(!t||typeof t.page!="number")return;let a=this.getAssociatedNotePath(e.file.path);if(!a)return;let i=this.app.vault.getAbstractFileByPath(a);if(!i||!(i instanceof s.TFile)){if(!this.settings.createAssociatedNote)return;i=await this.app.vault.create(a,`---
${this.settings.frontmatterKey}: ${t.page}
---

`);return}try{await this.app.fileManager.processFrontMatter(i,o=>{o[this.settings.frontmatterKey]=t.page})}catch(o){console.error("Error writing front-matter:",o)}}getAssociatedNotePath(e){try{let t=this.app.vault.getAbstractFileByPath(e);if(!t||!(t instanceof s.TFile))return null;let a=t.name,i=a.replace(/\.pdf$/i,""),o=t.parent?t.parent.path:"",p=t.parent?t.parent.name:"",l=this.settings.associatedNoteTemplate.replace(/{{pdf_filename}}/g,a).replace(/{{pdf_basename}}/g,i).replace(/{{pdf_folder_path}}/g,o).replace(/{{pdf_parent_folder_name}}/g,p);return l.startsWith("/")?l.slice(1):l}catch(t){return console.error("Path calc error:",t),null}}onunload(){for(let e of this.openPDFs.values())this.savePDFState(e);console.log("PDF View Sync plugin unloaded")}async loadSettings(){this.settings=Object.assign({},S,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}},d=class extends s.PluginSettingTab{constructor(e,t){super(e,t);this.plugin=t}display(){let{containerEl:e}=this;e.empty(),e.createEl("h2",{text:"PDF View State Sync Settings"}),new s.Setting(e).setName("Associated Note Path Template").setDesc("Placeholders: {{pdf_filename}}, {{pdf_basename}}, {{pdf_folder_path}}, {{pdf_parent_folder_name}}").addText(t=>t.setPlaceholder("@{{pdf_basename}}.md").setValue(this.plugin.settings.associatedNoteTemplate).onChange(async a=>{this.plugin.settings.associatedNoteTemplate=a,await this.plugin.saveSettings()})),new s.Setting(e).setName("Front-matter Key").setDesc("YAML key used to store the page number").addText(t=>t.setPlaceholder("pdf-view-state").setValue(this.plugin.settings.frontmatterKey).onChange(async a=>{this.plugin.settings.frontmatterKey=a,await this.plugin.saveSettings()})),new s.Setting(e).setName("Enable State Saving").addToggle(t=>t.setValue(this.plugin.settings.enableStateSaving).onChange(async a=>{this.plugin.settings.enableStateSaving=a,await this.plugin.saveSettings()})),new s.Setting(e).setName("Enable State Loading").addToggle(t=>t.setValue(this.plugin.settings.enableStateLoading).onChange(async a=>{this.plugin.settings.enableStateLoading=a,await this.plugin.saveSettings()})),new s.Setting(e).setName("Create Associated Note").setDesc("Automatically create the note if it is missing").addToggle(t=>t.setValue(this.plugin.settings.createAssociatedNote).onChange(async a=>{this.plugin.settings.createAssociatedNote=a,await this.plugin.saveSettings()}))}};
